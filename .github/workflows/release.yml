name: Release Corgi85 CI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10


jobs: 
  # PlatformIO on Windows, Ubuntu and Mac
  build-pio:
    name: PlatformIO for ${{ matrix.board }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]
        board: [esp8285]
    steps:
    - uses: actions/checkout@v1
    - name: Build Corgi85
      run: bash ./.github/scripts/on-push.sh ${{ matrix.board }} 1 1

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        # release_name: ${{ startsWith(github.ref, 'refs/tags/v') }}
        release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        body: |
          - ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /Users/runner/fw.bin
        asset_name: firmware.bin
        asset_content_type: application/octet-stream
              